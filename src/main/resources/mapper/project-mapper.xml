<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="src.dao.ProjectDAO">


    <update id="updateOptStatus">
        update project set opt_status = #{status}
        where id = #{id};
    </update>

    <select id="getMembersByIds" resultType="src.model.Student">
        select id, name from student
        where id in
        <foreach collection="array" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <select id="getLeaderIdByPid" resultType="string" parameterType="java.lang.Long">
        select leader_id from project
        where id = #{id};
    </select>

    <update id="updateProject" parameterType="src.model.Project">
        update project
        set name = #{name}, description = #{description},
            duration = if(duration > #{duration}, duration, #{duration} ),
            coach_id = #{coach_id}, opt_status = #{opt_status}, aim = #{aim}, type = #{type}
        where id = #{id};
    </update>

    <update id="updateDeleted">
        update project set deleted = #{newValue}
        where id = #{id};
    </update>

    <delete id="deleteProjectById" parameterType="java.lang.Long">
        delete from project
        where id = #{id};
    </delete>

    <select id="getCountOfLab" resultType="java.lang.Integer" parameterType="java.lang.Long">
        select count(1) from project
        where lab_name = (select name from laboratory where id = #{lid});
    </select>

    <!-- 一个 insert 服务需要四个 DAO 接口 -->
    <!-- insert marco -->
    <insert id="insertProject" keyProperty="id" useGeneratedKeys="true"
            parameterType="src.model.Project">
        insert into project(name, description, duration, coach_id,
                            lab_name, leader_id, aim, type)
        values (#{name}, #{description}, #{duration}, #{coach_id},
                #{lab_name}, #{leader_id}, #{aim}, #{type} );
    </insert>

    <!-- 向参与表中插入数据 -->
    <insert id="addMember">
        insert into participate(sid, pid)
        values ( #{sid}, #{pid} );
    </insert>

    <delete id="removeMember">
        delete from participate
        where sid = #{sid} and pid = #{pid};
    </delete>

    <!-- 一个学生只允许管理一个活跃的项目（队长），参与多个项目（组员）-->
    <!-- 非活跃状态：已拒绝，已取消，已完成，已超时 -->
    <select id="getActiveProjectIdByLeaderId" parameterType="string"
            resultType="java.lang.Long">
        select id from project
        where leader_id = #{sid}
        and end_time is null and opt_status != 4 and opt_status != 2
        and (start_time is null or
         to_seconds(start_time) + duration > to_seconds(now())) and deleted = 0;
    </select>

    <!-- 获取最大 pid -->
    <!--<select id="getMaxProjectId" resultType="java.lang.Long">-->
        <!--select max(id) from project;-->
    <!--</select>-->
    <!-- /insert -->

    <!-- 根据 pid 查询项目 -->
    <select id="getProjectById" resultMap="projectMap_fullStudent"
            parameterType="java.lang.Long">
        select * from project
        where id = #{id};
    </select>

    <!-- 获取某个学生的所有项目 -->
    <select id="getProjectsAllByStudentId" resultMap="projectMap" parameterType="string">
        select id, name, coach_id, lab_name, opt_status, start_time, end_time, duration, 
               submit_time, leader_id, type from project
        where id in (
                    select pid from participate
                    where sid = #{sid} )
        order by submit_time desc;
    </select>

    <!-- 获取某个学生未被删除的所有项目 -->
    <select id="getProjectsDelByStudentId" resultMap="projectMap" parameterType="string">
        select id, name, coach_id, lab_name, opt_status, start_time, end_time, duration,
               submit_time, leader_id, type from project
        where id in (
                    select pid from participate
                    where sid = #{sid} )
          and deleted = 0
        order by submit_time desc;
    </select>

    <!-- lab marco -->
    <!-- 所有项目分页 -->
    <select id="getAllSplitOfLabId" resultMap="projectMap">
        select id, name, coach_id, lab_name, opt_status, start_time, end_time,
                duration, submit_time, leader_id, type
        from project
        where lab_name = (select name from laboratory where id = #{lid})
        order by submit_time desc
        limit #{num} offset #{offset};
    </select>

    <!-- 正在请求 更新，取消 的项目 -->
    <select id="getRequestingOfLabId" resultMap="projectMap" parameterType="java.lang.Long">
        select id, name, coach_id, lab_name, opt_status, start_time, end_time,
               duration, submit_time, leader_id, type
        from project
        where lab_name = (select name from laboratory where id = #{lab_id})
          and start_time is not null and end_time is null
          and to_seconds(start_time) + duration > to_seconds(now())

          and opt_status != 4
          and opt_status != 0
        order by submit_time desc;
    </select>

    <!-- 等待审核的项目 -->
    <select id="getCreatingOfLabId" resultMap="projectMap" parameterType="java.lang.Long">
        select id, name, coach_id, lab_name, opt_status, start_time, end_time,
               duration, submit_time, leader_id, type
        from project
        where lab_name = (select name from laboratory where id = #{lab_id})
          and start_time is null
          and opt_status != 2
        order by submit_time desc;
    </select>

    <!-- 进行中的项目一览 -->
    <select id="getProcessingOfLabId" resultMap="projectMap" parameterType="java.lang.Long">
        select id, name, coach_id, lab_name, opt_status, start_time, end_time,
               duration, submit_time, leader_id, type
        from project
        where lab_name = (select name from laboratory where id = #{lab_id})
          and start_time is not null and end_time is null
          and to_seconds(start_time) + duration > to_seconds(now())

          and opt_status != 4
        order by submit_time desc;
    </select>
    <!-- /lab -->

    <!-- admin marco-->
    <select id="getAllSplit" resultMap="projectMap"
            parameterType="src.model.assistance.PageRowsMap">
        select id, name, coach_id, lab_name,
               opt_status, start_time, end_time, duration, submit_time, leader_id, type
        from project  
        order by submit_time desc
        limit #{num} offset #{offset};
    </select>

    <select id="getProcessing" parameterType="src.model.assistance.PageRowsMap"
            resultMap="projectMap">
        select id, name, coach_id, lab_name,
               opt_status, start_time, end_time, duration, submit_time, leader_id, type
        from project where opt_status != 4
                       and start_time is not null and end_time is null
                       and to_seconds(start_time) + duration > to_seconds(now())
        order by submit_time desc
        limit #{num} offset #{offset};
    </select>

    <select id="getCreating" resultMap="projectMap"
            parameterType="src.model.assistance.PageRowsMap">
        select id, name, coach_id, lab_name,
               opt_status, start_time, end_time, duration, submit_time, leader_id, type
        from project where start_time is null 
                       and opt_status != 2
        order by submit_time desc
        limit #{num} offset #{offset};
    </select>

    <select id="getRejected" resultMap="projectMap"
            parameterType="src.model.assistance.PageRowsMap">
        select id, name, coach_id, lab_name,
               opt_status, start_time, end_time, duration, submit_time, leader_id, type
        from project where opt_status = 2
        order by submit_time desc
        limit #{num} offset #{offset};
    </select>

    <select id="getCanceled" resultMap="projectMap"
            parameterType="src.model.assistance.PageRowsMap">
        select id, name, coach_id, lab_name,
               opt_status, start_time, end_time, duration, submit_time, leader_id, type
        from project where opt_status = 4
        order by submit_time desc
        limit #{num} offset #{offset};
    </select>

    <select id="getComplete" resultMap="projectMap"
            parameterType="src.model.assistance.PageRowsMap">
        select id, name, coach_id, lab_name,
               opt_status, start_time, end_time, duration, submit_time, leader_id, type
        from project where end_time is not null
        order by submit_time desc
        limit #{num} offset #{offset};
    </select>

    <select id="getOvertime" resultMap="projectMap"
            parameterType="src.model.assistance.PageRowsMap">
        select id, name, coach_id, lab_name,
               opt_status, start_time, end_time, duration, submit_time, leader_id, type
        from project where start_time is not null and end_time is null
                       and opt_status != 4
                       and to_seconds(now()) >= to_seconds(start_time) + duration
        order by submit_time desc
        limit #{num} offset #{offset};
    </select>

    <!-- count -->
    <select id="getAllCount" resultType="java.lang.Integer">
        select count(1) from project;
    </select>
    <select id="getCreatingCount" resultType="java.lang.Integer">
        select count(1) from project where start_time is null and opt_status != 2;
    </select>
    <select id="getProcessingCount" resultType="java.lang.Integer">
        select count(1) from project
        where opt_status != 4 and start_time is not null and end_time is null
          and to_seconds(start_time) + duration > to_seconds(now());
    </select>
    <select id="getRejectedCount" resultType="java.lang.Integer">
        select count(1) from project where opt_status = 2;
    </select>
    <select id="getCanceledCount" resultType="java.lang.Integer">
        select count(1) from project where opt_status = 4;
    </select>
    <select id="getCompleteCount" resultType="java.lang.Integer">
        select count(1) from project where end_time is not null;
    </select>
    <select id="getOvertimeCount" resultType="java.lang.Integer">
        select count(1) from project
        where start_time is not null and end_time is null and opt_status != 4
          and to_seconds(now()) >= to_seconds(start_time) + duration;
    </select>
    <!-- /admin -->

    <!-- resultMap 依赖 -->
    <select id="getMembersByProjectId" resultType="src.model.Student">
        select s.id, s.name
        from student s inner join participate p on s.id = p.sid
        where p.pid= #{id};
    </select>

    <select id="getMembersFullByProjectId" resultType="src.model.Student">
        select s.id, s.name, s.email, s.phone, s.college, s.grade, s.major, s.introduce
        from student s inner join participate p on s.id = p.sid
        where  p.pid= #{id};
    </select>

    <resultMap id="projectMap" type="src.model.Project">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="coach_id" column="coach_id"/>
        <result property="lab_name" column="lab_name"/>
        <result property="opt_status" column="opt_status"/>
        <result property="start_time" column="start_time"/>
        <result property="end_time" column="end_time"/>
        <result property="duration" column="duration"/>
        <result property="submit_time" column="submit_time"/>
        <result property="leader_id" column="leader_id"/>
        <result property="type" column="type"/>
        <!--<result property="description" column="description"/>-->
        <!--<result property="aim" column="aim"/>-->
        <result property="deleted" column="deleted"/>
        <collection property="members" column="id" select="getMembersByProjectId"/>
    </resultMap>

    <resultMap id="projectMap_fullStudent" type="src.model.Project">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="coach_id" column="coach_id"/>
        <result property="lab_name" column="lab_name"/>
        <result property="opt_status" column="opt_status"/>
        <result property="start_time" column="start_time"/>
        <result property="end_time" column="end_time"/>
        <result property="duration" column="duration"/>
        <result property="submit_time" column="submit_time"/>
        <result property="description" column="description"/>
        <result property="leader_id" column="leader_id"/>
        <result property="aim" column="aim"/>
        <result property="type" column="type"/>
        <result property="deleted" column="deleted"/>
        <collection property="members" column="id" select="getMembersFullByProjectId"/>
    </resultMap>

</mapper>